const App = getApp(); Page({ data: { isLogin: false, signNum: 0, signState: 0, lastTime: '', min: 1, max: 7, be: 0, options: {}, items: {}, }, onLoad: function (options) { this.setData({ options }); this.getPageData() }, getPageData: function (callback) { let _this = this; App._get('page/index', { page_id: _this.data.options.page_id || 0 }, function (result) { _this.setData({ 'items[0]': result.data.items[4] }); typeof callback === 'function' && callback() }) }, onShow() { let _this = this; _this.setData({ isLogin: App.checkIsLogin() }); if (_this.data.isLogin) { _this.getSigninInfo() } else { _this.onLogin() } }, onLogin() { wx.navigateTo({ url: '../login/login', }) }, formatTime(unixtime) { var dateTime = new Date(parseInt(unixtime) * 1000); var year = dateTime.getFullYear(); var month = dateTime.getMonth() + 1; var day = dateTime.getDate(); var timeSpanStr = year + '-' + month + '-' + day; return timeSpanStr }, getSigninInfo() { let _this = this; App._get('qiandao/getQiandaoInfo', {}, function (result) { wx.setStorageSync('signState', result.data.user_qiandao_info.is_signed); _this.setData({ signNum: result.data.user_qiandao_info.sign_times, signState: result.data.user_qiandao_info.is_signed, lastTime: _this.formatTime(result.data.user_qiandao_info.last_time) }) }) }, bindSignIn(e) { let _this = this, min = e.currentTarget.dataset.min, max = e.currentTarget.dataset.max, be = e.currentTarget.dataset.be; App._get('qiandao/sign', {}, function (result) { var signTimes = result.data.sign_times; if (signTimes % 7 == 0) { be += 1 } if (signTimes == 7 * be + 1) { min = 7 * be + 1; max = 7 * be + 7 } _this.setData({ signNum: signTimes, signState: 1, be: be, min: min, max: max }); wx.setStorageSync('signState', 1) }) }, onTargetPoints() { let _this = this; if (_this.isLogin == false) { _this.onLogin() } wx.navigateTo({ url: '../points/log/index' }) }, })