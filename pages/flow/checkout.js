const App = getApp(); import Util from '../../utils/util.js'; import Verify from '../../utils/verify.js'; import DeliveryTypeEnum from '../../utils/enum/DeliveryType.js'; import PayTypeEnum from '../../utils/enum/order/PayType'; import Dialog from '../../components/dialog/dialog'; Page({ data: { options: {}, setting: { delivery: [], }, isShowTab: false, DeliveryTypeEnum, curDelivery: null, PayTypeEnum, curPayType: PayTypeEnum.WECHAT.value, address: null, exist_address: false, selectedShopId: 0, linkman: '', phone: '', goods: {}, selectCouponId: 0, isUsePoints: false, remark: '', disabled: false, hasError: false, error: '', }, onLoad(options) { let _this = this; _this.setData({ options }) }, onShow() { let _this = this; _this.getOrderData() }, getOrderData() { let _this = this, options = _this.data.options; let callback = result => { let resData = result.data; if (result.code !== 1) { App.showError(result.msg); return false } if (resData.has_error) { _this.data.hasError = true; _this.data.error = resData.error_msg; App.showError(_this.data.error) } let data = {}; data.curDelivery = resData.delivery; data.isShowTab = resData.setting.delivery.length > 1; if (_this.data.linkman === '') { data.linkman = resData.last_extract.linkman } if (_this.data.phone === '') { data.phone = resData.last_extract.phone } _this.setData(Object.assign({}, resData, data)); wx.hideLoading() }; wx.showLoading({ title: '加载中...', }); let params = { delivery: _this.data.curDelivery || 0, shop_id: _this.data.selectedShopId || 0, coupon_id: _this.data.selectCouponId || 0, is_use_points: _this.data.isUsePoints ? 1 : 0, }; if (options.order_type === 'buyNow') { App._get('order/buyNow', Object.assign({}, params, { goods_id: options.goods_id, goods_num: options.goods_num, goods_sku_id: options.goods_sku_id, }), result => { callback(result) }) } else if (options.order_type === 'bargain') { App._get('bargain.order/checkout', Object.assign({}, params, { task_id: options.task_id, goods_sku_id: options.goods_sku_id, }), result => { callback(result) }) } else if (options.order_type === 'sharp') { App._get('sharp.order/checkout', Object.assign({}, params, { active_time_id: options.active_time_id, sharp_goods_id: options.sharp_goods_id, goods_sku_id: options.goods_sku_id, goods_num: options.goods_num, }), result => { callback(result) }) } else if (options.order_type === 'cart') { App._get('order/cart', Object.assign({}, params, { cart_ids: options.cart_ids || 0, }), result => { callback(result) }) } }, onSwichDelivery(e) { let _this = this, curDelivery = e.currentTarget.dataset.current; _this.setData({ curDelivery }); _this.getOrderData() }, onSelectAddress() { wx.navigateTo({ url: '../address/' + (this.data.exist_address ? 'index?from=flow' : 'create') }) }, onSelectExtractPoint() { let _this = this, selectedId = _this.data.selectedShopId; wx.navigateTo({ url: '../_select/extract_point/index?selected_id=' + selectedId }) }, onTargetGoods(e) { wx.navigateTo({ url: `../goods/index?goods_id=${e.currentTarget.dataset.id}`, }) }, onSubmitOrder() { let _this = this, options = _this.data.options; if (_this.data.disabled) { return false } if (!_this._onVerify()) { return false } let callback = result => { if (result.code === -10) { App.showError(result.msg, () => { _this.redirectToOrderIndex() }); return false } if (result.data.pay_type == PayTypeEnum.WECHAT.value) { App.wxPayment({ payment: result.data.payment, success: res => { _this.redirectToOrderIndex() }, fail: res => { App.showError(result.msg.error, () => { _this.redirectToOrderIndex() }) }, }) } if (result.data.pay_type == PayTypeEnum.BALANCE.value) { App.showSuccess(result.msg.success, () => { _this.redirectToOrderIndex() }) } }; _this.data.disabled = true; wx.showLoading({ title: '正在处理...' }); let url = ''; let postData = { delivery: _this.data.curDelivery, pay_type: _this.data.curPayType, shop_id: _this.data.selectedShopId || 0, linkman: _this.data.linkman, phone: _this.data.phone, coupon_id: _this.data.selectCouponId || 0, is_use_points: _this.data.isUsePoints ? 1 : 0, remark: _this.data.remark || '', }; if (options.order_type === 'buyNow') { url = 'order/buyNow'; postData = Object.assign(postData, { goods_id: options.goods_id, goods_num: options.goods_num, goods_sku_id: options.goods_sku_id, }) } if (options.order_type === 'cart') { url = 'order/cart'; postData = Object.assign(postData, { cart_ids: options.cart_ids || 0, }) } if (options.order_type === 'bargain') { url = 'bargain.order/checkout'; postData = Object.assign(postData, { task_id: options.task_id, goods_sku_id: options.goods_sku_id, }) } if (options.order_type === 'sharp') { url = 'sharp.order/checkout'; postData = Object.assign(postData, { active_time_id: options.active_time_id, sharp_goods_id: options.sharp_goods_id, goods_sku_id: options.goods_sku_id, goods_num: options.goods_num, }) } App._post_form(url, postData, result => { callback(result) }, result => { }, () => { wx.hideLoading(); _this.data.disabled = false }) }, _onVerify() { let _this = this; if (_this.data.hasError) { App.showError(_this.data.error); return false } if (_this.data.curDelivery == DeliveryTypeEnum.EXTRACT.value) { _this.setData({ linkman: _this.data.linkman.trim(), phone: _this.data.phone.trim(), }); if (_this.data.selectedShopId <= 0) { App.showError('请选择自提的门店'); return false } if (Verify.isEmpty(_this.data.linkman)) { App.showError('请填写自提联系人'); return false } if (Verify.isEmpty(_this.data.phone)) { App.showError('请填写自提联系电话'); return false } if (!Verify.isPhone(_this.data.phone)) { App.showError('请输入正确的联系电话'); return false } } return true }, bindRemark(e) { let _this = this; _this.setData({ remark: e.detail.value }) }, onTogglePopupCoupon() { let _this = this; if (_this.data.coupon_list.length > 0) { _this.setData({ showBottomPopup: !_this.data.showBottomPopup }) } }, onSelectCoupon(e) { let _this = this; _this.setData({ selectCouponId: e.currentTarget.dataset.id }); _this.getOrderData(); _this.onTogglePopupCoupon() }, onNotUseCoupon() { let _this = this; _this.setData({ selectCouponId: 0 }); _this.getOrderData(); _this.onTogglePopupCoupon() }, onSelectPayType(e) { let _this = this; App.saveFormId(e.detail.formId); _this.setData({ curPayType: e.currentTarget.dataset.value }) }, redirectToOrderIndex() { wx.redirectTo({ url: '../order/index', }) }, onInputLinkman(e) { let _this = this; _this.setData({ linkman: e.detail.value }) }, onInputPhone(e) { let _this = this; _this.setData({ phone: e.detail.value }) }, onTriggerPoints({ detail }) { let _this = this; _this.setData({ isUsePoints: detail }); _this.getOrderData() }, onShowPoints(e) { let _this = this; App.saveFormId(e.detail.formId); let setting = _this.data.setting; Dialog({ title: `${setting.points_name}说明`, message: setting.points_describe, selector: '#zan-base-dialog', isScroll: true, buttons: [{ text: '关闭', color: 'red', type: 'cash' }] }) }, });