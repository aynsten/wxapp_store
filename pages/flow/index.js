const App = getApp(); import Util from '../../utils/util.js'; Page({ data: { isLogin: false, goods_list: [], action: 'complete', checkedData: [], checkedAll: false, cartTotalPrice: '0.00', options: {}, items: {}, }, onLoad: function (options) { this.setData({ options }); this.getPageData() }, onShow() { let _this = this; _this.setData({ isLogin: App.checkIsLogin() });if (_this.data.isLogin) { _this.getCartList() } }, getPageData: function (callback) { let _this = this; App._get('page/index', { page_id: _this.data.options.page_id || 0 }, function (result) { _this.setData({ 'items[0]': result.data.items[5], }); typeof callback === 'function' && callback() }) }, getCartList() { let _this = this; App._get('cart/lists', {}, result => { _this._initGoodsChecked(result.data) }) }, _initGoodsChecked(data) { let _this = this; let checkedData = _this.getCheckedData(); data.goods_list.forEach(item => { item.checked = Util.inArray(`${item.goods_id}_${item.goods_sku_id}`, checkedData) }); _this.setData({ goods_list: data.goods_list, order_total_price: data.order_total_price, action: 'complete', checkedAll: checkedData.length == data.goods_list.length, }); _this.updateTotalPrice(); _this.updateTotalNum() }, onChecked(e) { let _this = this, index = e.currentTarget.dataset.index, goods = _this.data.goods_list[index], checked = !goods.checked; _this.setData({ ['goods_list[' + index + '].checked']: checked }); _this.onUpdateChecked(); _this.updateTotalPrice(); _this.updateTotalNum(); _this.setData({ checkedAll: _this.getCheckedData().length == _this.data.goods_list.length }) }, getCheckedData() { let checkedData = wx.getStorageSync('checkedData'); return checkedData ? checkedData : [] }, onCheckedAll(e) { let _this = this, goodsList = _this.data.goods_list; goodsList.forEach(item => { item.checked = !_this.data.checkedAll }); _this.setData({ goods_list: goodsList, checkedAll: !_this.data.checkedAll }); _this.updateTotalPrice(); _this.updateTotalNum(); _this.onUpdateChecked() }, onUpdateChecked() { let _this = this, checkedData = []; _this.data.goods_list.forEach(item => { if (item.checked == true) { checkedData.push(`${item.goods_id}_${item.goods_sku_id}`) } }); wx.setStorageSync('checkedData', checkedData) }, switchAction(e) { let _this = this; _this.setData({ action: e.currentTarget.dataset.action }) }, onDelete() { let _this = this, cartIds = _this.getCheckedIds(); if (!cartIds.length) { App.showError('您还没有选择商品'); return false } wx.showModal({ title: "提示", content: "您确定要移除选择的商品吗?", success(e) { e.confirm && App._post_form('cart/delete', { goods_sku_id: cartIds }, result => { _this.onDeleteEvent(cartIds); _this.getCartList() }) } }) }, onDeleteEvent(cartIds) { let _this = this; cartIds.forEach((cartIndex) => { _this.data.goods_list.forEach((item, goodsIndex) => { if (cartIndex == `${item.goods_id}_${item.goods_sku_id}`) { _this.data.goods_list.splice(goodsIndex, 1) } }) }); _this.onUpdateChecked(); return true }, getCheckedIds() { let _this = this; let arrIds = []; _this.data.goods_list.forEach(item => { if (item.checked === true) { arrIds.push(`${item.goods_id}_${item.goods_sku_id}`) } }); return arrIds }, updateTotalPrice() { let _this = this; let cartTotalPrice = 0; _this.data.goods_list.forEach(item => { if (item.checked === true) { cartTotalPrice = _this.mathadd(cartTotalPrice, item.total_price) } }); _this.setData({ cartTotalPrice: Number(cartTotalPrice).toFixed(2) }) }, updateTotalNum() { let _this = this; let _cartTotalNum = 0; _this.data.goods_list.forEach(item => { _cartTotalNum += item.total_num }); _this.setData({ cartTotalNum: _cartTotalNum }); wx.setStorageSync("totalCartNum", _cartTotalNum) }, onAddCount(e) { let _this = this, index = e.currentTarget.dataset.index, goodsSkuId = e.currentTarget.dataset.skuId, goods = _this.data.goods_list[index]; wx.showLoading({ title: '加载中', mask: true }); App._post_form('cart/add', { goods_id: goods.goods_id, goods_num: 1, goods_sku_id: goodsSkuId }, () => { _this.getCartList() }, null, () => { wx.hideLoading() }) }, onSubCount(e) { let _this = this, index = e.currentTarget.dataset.index, goodsSkuId = e.currentTarget.dataset.skuId, goods = _this.data.goods_list[index]; if (goods.total_num == 1) { wx.showModal({ title: "提示", content: "您确定要移除该的商品吗?", success(e) { e.confirm && App._post_form('cart/delete', { goods_sku_id: `${goods.goods_id}_${goodsSkuId}` }, result => { _this.getCartList() }) } }) } if (goods.total_num > 1) { wx.showLoading({ title: '加载中', mask: true });App._post_form('cart/sub', { goods_id: goods.goods_id, goods_sku_id: goodsSkuId }, () => { _this.getCartList() }, null, () => { wx.hideLoading() }) } }, submit() { let _this = this, cartIds = _this.getCheckedIds(); if (!cartIds.length) { App.showError('您还没有选择商品'); return false } wx.navigateTo({ url: '../flow/checkout?order_type=cart&cart_ids=' + cartIds }) }, mathadd(arg1, arg2) { return (Number(arg1) + Number(arg2)).toFixed(2) }, mathsub(arg1, arg2) { return (Number(arg1) - Number(arg2)).toFixed(2) }, goShopping() { wx.switchTab({ url: '../category/index', }) }, })