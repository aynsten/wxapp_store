const App = getApp(); Page({ data: { options: null, goodsList: [], formData: [], }, submitDisable: false, onLoad: function (options) { this.data.options = options; this.getGoodsList() }, getGoodsList: function () { let _this = this; App._get('user.comment/order', { order_id: this.data.options.order_id }, function (result) { let goodsList = result.data.goodsList; _this.setData({ goodsList, formData: _this.initFormData(goodsList) }) }) }, initFormData: function (goodsList) { let data = []; goodsList.forEach(function (item) { data.push({ goods_id: item.goods_id, order_goods_id: item.order_goods_id, score: 10, content: '', image_list: [], uploaded: [] }) }); return data }, setScore: function (e) { let dataset = e.currentTarget.dataset; this.setData({ ['formData[' + dataset.index + '].score']: dataset.score }) }, contentInput: function (e) { let index = e.currentTarget.dataset.index; this.setData({ ['formData[' + index + '].content']: e.detail.value }) }, chooseImage: function (e) { let _this = this, index = e.currentTarget.dataset.index, imageList = _this.data.formData[index].image_list; wx.chooseImage({ count: 6 - imageList.length, sizeType: ['original', 'compressed'], sourceType: ['album', 'camera'], success: function (res) { _this.setData({ ['formData[' + index + '].image_list']: imageList.concat(res.tempFilePaths) }) } }) }, deleteImage: function (e) { let dataset = e.currentTarget.dataset, image_list = this.data.formData[dataset.index].image_list; image_list.splice(dataset.imageIndex, 1); this.setData({ ['formData[' + dataset.index + '].image_list']: image_list }) }, submit: function () { let _this = this, formData = _this.data.formData; if (_this.submitDisable === true) { return false } _this.submitDisable = true; wx.showLoading({ title: '正在处理...', mask: true }); let fromPostCall = function (formData) { App._post_form('user.comment/order', { order_id: _this.data.options.order_id, formData: JSON.stringify(formData) }, function (result) { if (result.code === 1) { App.showSuccess(result.msg, function () { wx.navigateBack() }) } else { App.showError(result.msg) } }, false, function () { wx.hideLoading(); _this.submitDisable = false }) }; let imagesLength = 0; formData.forEach(function (item, formIndex) { item.content !== '' && (imagesLength += item.image_list.length) }); imagesLength > 0 ? _this.uploadFile(imagesLength, formData, fromPostCall) : fromPostCall(formData) }, uploadFile: function (imagesLength, formData, callBack) { let params = { wxapp_id: App.getWxappId(), token: wx.getStorageSync('token') }; let i = 0; formData.forEach(function (item, formIndex) { if (item.content !== '') { item.image_list.forEach(function (filePath, fileKey) { wx.uploadFile({ url: App.api_root + 'upload/image', filePath: filePath, name: 'iFile', formData: params, success: function (res) { let result = typeof res.data === "object" ? res.data : JSON.parse(res.data); if (result.code === 1) { item.uploaded[fileKey] = result.data.file_id } }, complete: function () { i++; if (imagesLength === i) { callBack && callBack(formData) } } }) }) } }) }, })