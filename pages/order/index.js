const App = getApp(); import DeliveryTypeEnum from '../../utils/enum/DeliveryType.js'; import PayTypeEnum from '../../utils/enum/order/PayType'; Page({ data: { dataType: 'all', list: [], scrollHeight: null, DeliveryTypeEnum, PayTypeEnum, no_more: false, isLoading: true, page: 1, showQRCodePopup: false, QRCodeImage: '', }, onLoad(options) { let _this = this; _this.setListHeight(); _this.setData({ dataType: options.type || 'all' }) }, onShow() { this.getOrderList() }, getOrderList(isPage, page) { let _this = this; App._get('user.order/lists', { page: page || 1, dataType: _this.data.dataType }, result => { let resList = result.data.list, dataList = _this.data.list; if (isPage == true) { _this.setData({ 'list.data': dataList.data.concat(resList.data), isLoading: false, }) } else { _this.setData({ list: resList, isLoading: false, }) } }) }, bindHeaderTap(e) { this.setData({ dataType: e.currentTarget.dataset.type, list: {}, isLoading: true, page: 1, no_more: false, }); this.getOrderList(e.currentTarget.dataset.type) }, cancelOrder(e) { let _this = this; let order_id = e.currentTarget.dataset.id; wx.showModal({ title: "友情提示", content: "确认要取消该订单吗？", success(o) { if (o.confirm) { App._post_form('user.order/cancel', { order_id }, result => { _this.getOrderList(_this.data.dataType) }) } } }) }, receipt(e) { let _this = this; let order_id = e.currentTarget.dataset.id; wx.showModal({ title: "提示", content: "确认收到商品？", success(o) { if (o.confirm) { App._post_form('user.order/receipt', { order_id }, result => { _this.getOrderList(_this.data.dataType) }) } } }) }, onPayOrder(e) { let _this = this; _this.setData({ payOrderId: e.currentTarget.dataset.id }); _this.onTogglePayPopup() }, onSelectPayType(e) { let _this = this; App.saveFormId(e.detail.formId); _this.onTogglePayPopup(); if (!_this.data.showPayPopup) { _this.payment(_this.data.payOrderId, e.currentTarget.dataset.value) } }, onTogglePayPopup() { this.setData({ showPayPopup: !this.data.showPayPopup }) }, payment(orderId, payType) { wx.showLoading({ title: '正在处理...', }); App._post_form('user.order/pay', { order_id: orderId, payType: payType }, result => { if (result.code === -10) { App.showError(result.msg); return false } if (result.data.pay_type == PayTypeEnum.WECHAT.value) { App.wxPayment({ payment: result.data.payment, success() { wx.navigateTo({ url: '../order/detail?order_id=' + orderId }) }, fail() { App.showError(result.msg.error) }, }) } if (result.data.pay_type == PayTypeEnum.BALANCE.value) { App.showSuccess(result.msg.success, () => { wx.navigateTo({ url: '../order/detail?order_id=' + orderId }) }) } }, null, () => { wx.hideLoading() }) }, comment(e) { let _this = this; let order_id = e.currentTarget.dataset.id; wx.navigateTo({ url: './comment/comment?order_id=' + order_id, }) }, navigateToDetail(e) { let order_id = e.currentTarget.dataset.id; wx.navigateTo({ url: '../order/detail?order_id=' + order_id }) }, onPullDownRefresh() { wx.stopPullDownRefresh() }, bindDownLoad() { if (this.data.page >= this.data.list.last_page) { this.setData({ no_more: true }); return false } this.getOrderList(true, ++this.data.page) }, setListHeight() { let systemInfo = wx.getSystemInfoSync(), rpx = systemInfo.windowWidth / 750, tapHeight = Math.floor(rpx * 88), scrollHeight = systemInfo.windowHeight - tapHeight; this.setData({ scrollHeight }) }, onExtractQRCode(e) { let _this = this, order_id = e.currentTarget.dataset.id; wx.showLoading({ title: '加载中', }); App._get('user.order/extractQrcode', { order_id }, (result) => { _this.setData({ QRCodeImage: result.data.qrcode }); _this.onToggleQRCodePopup() }, null, () => { wx.hideLoading() }) }, onToggleQRCodePopup() { let _this = this; _this.setData({ showQRCodePopup: !_this.data.showQRCodePopup }) }, });